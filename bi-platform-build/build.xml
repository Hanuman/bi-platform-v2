<!-- ============================================================
     description: main build file 
-->

<project name="pentaho-dist" basedir="." default="jar-all">

  <property file="override.properties" />
  <property file="build.properties" />
	
  <!-- ============================================================
	     The pro build relies on these property names. Change the names and you're likely to break 
	     the pro build.
	-->
  <property name="tomcat-pci" location="../tomcat-pci" />
  <property name="platform-webapp" location="../bi-platform-appserver/webapps/pentaho" />
  <property name="pentaho-style-webapp" location="../bi-platform-appserver/webapps/pentaho-style" />
  <property name="sw-style-webapp" location="../bi-platform-appserver/webapps/sw-style" />
  <property name="jboss-portal-webapp" location="../bi-platform-appserver/jboss/webapps/pentaho-jboss-portal-layout" />
  <property name="source-solution" location="../bi-platform-sample-solution" />
  <property name="target-solution" location="${tomcat-pci}/pentaho-solutions" />
  <property name="target-pentaho-war" location="${tomcat-pci}/tomcat/webapps/pentaho" />
  <property name="target-sw-style-war" location="${tomcat-pci}/tomcat/webapps/sw-style" />
  <property name="target-pentaho-style-war" location="${tomcat-pci}/tomcat/webapps/pentaho-style" />
  <property name="bi-platform-assembly-open-dir" location="../bi-platform-assembly-open" />

  <!-- Build Cache properties -->
  <property name="build.cache.dir"
            value="${user.home}/.pentaho_build_cache"
            description="Base dir for runtime jars that are required exclusively by the build process" />
  <property name="tmp.build.cache.dir"
            value="${build.cache.dir}/tmp"
            description="Temporary directory where files are prepared for build cache" />
  <property name="ivy.build.cache.dir"
            value="${build.cache.dir}/ivy"
            description="Directory where the IVY jar is placed after it is auto downloaded by the build" />
  <property name="cobertura.build.cache.dir"
            value="${build.cache.dir}/cobertura"
            description="Directory where the Cobertura jar (and dependencies) is placed after it is auto-downloaded by the build" />
  <property name="antcontrib.build.cache.dir"
            value="${build.cache.dir}/ant-contrib"
            description="Directory where the Ant-Contrib jar (and dependencies) is placed after it is auto-downloaded by the build" />
  <property name="pentaho.build.cache.dir"
            value="${build.cache.dir}/pentaho"
            description="Directory where the Pentaho ant tasks jar (and dependencies) is placed after it is auto-downloaded by the build" />
  <property name="svnant.build.cache.dir"
            value="${build.cache.dir}/svnant"
            description="Directory where the SVN ANT install is placed after it is auto downloaded by the build" />

  <!-- SVN Ant Properties -->
  <property name="svnant.url"
            value="http://subclipse.tigris.org/files/documents/906/43359/svnant-1.2.0-RC1.zip"
            description="The URL to the current release of SVN Ant" />
  <property name="svnant.use-javahl"
            value="false"
            description="Prefer JNI JavaHL binding over the command line client for native svn support" />
  <property name="svnant.use-svnkit"
            value="true"
            description="Prefer SVNKit binding over the command line client for native svn support (defaults to true)" />
	<property name="default.svn.revision"
	          value="developer"
	          description="The default svn revision number to use. If this property is blank, it will be computed."/>

	<tstamp>
    <format property="current.date" pattern="yyyyMMdd-hh:mma" locale="en" />
  </tstamp>

  <!--=======================================================================
	    install-antcontrib
	    
	    (Fetches and) installs ant-contrib tasks.
	    ====================================================================-->
  <target name="install-antcontrib"
          depends="antcontrib.download-check"
          description="Fetch ant-contrib jar and install ant tasks">
    <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
        <fileset dir="${antcontrib.build.cache.dir}">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </taskdef>
  </target>


  <!--=======================================================================
	    antcontrib.download-check
	    
	    Fetches ant-contrib from sourceforge if it is not already present
	    ====================================================================-->
  <target name="antcontrib.download-check">
    <condition property="antcontrib.available">
      <and>
        <available file="${antcontrib.build.cache.dir}" />
        <available classname="net.sf.antcontrib.logic.IfTask">
          <classpath>
            <fileset dir="${antcontrib.build.cache.dir}">
              <include name="*.jar" />
            </fileset>
          </classpath>
        </available>
      </and>
    </condition>
    <antcall target="antcontrib.download" />
  </target>


  <!--=======================================================================
	    antcontrib.download
	    
	    Fetches ant-contrib from sourceforge
	    ====================================================================-->
  <target name="antcontrib.download" unless="antcontrib.available">
    <mkdir dir="${tmp.build.cache.dir}" />
    <get src="http://downloads.sourceforge.net/ant-contrib/ant-contrib-1.0b3-bin.zip"
         dest="${tmp.build.cache.dir}/antcontrib.zip"
         usetimestamp="true" />
    <unzip src="${tmp.build.cache.dir}/antcontrib.zip" dest="${tmp.build.cache.dir}">
      <patternset>
        <include name="**/*.jar" />
      </patternset>
    </unzip>
    <copy todir="${antcontrib.build.cache.dir}">
      <fileset dir="${tmp.build.cache.dir}/ant-contrib">
        <include name="**/*.jar" />
      </fileset>
    </copy>
  </target>

  <!--=======================================================================
	    svnant.download-check
	    
	    Fetch SVN ANT zip if it is not already present
	    ====================================================================-->
  <target name="svnant.download-check">
    <condition property="svnant.available">
      <and>
        <available file="${svnant.build.cache.dir}" />
        <available classname="org.tigris.subversion.svnant.SvnTask">
          <classpath>
            <fileset dir="${svnant.build.cache.dir}">
              <include name="**/*.jar" />
            </fileset>
          </classpath>
        </available>
      </and>
    </condition>
    <antcall target="svnant.download" />
  </target>


  <!--=======================================================================
      svnant.download
    
      Downloads the IVY jar file for use by ant.
      ====================================================================-->
  <target name="svnant.download" unless="svnant.available">
    <mkdir dir="${svnant.build.cache.dir}" />
    <get src="${svnant.url}" dest="${svnant.build.cache.dir}/svnant.zip" usetimestamp="true" />
    <unzip src="${svnant.build.cache.dir}/svnant.zip" dest="${svnant.build.cache.dir}">
      <patternset>
        <include name="**/*.jar" />
      </patternset>
    </unzip>
  </target>


  <!--=======================================================================
    install-svnant
    
    (Fetches and) installs the SVN ANT for use by this ant script
    ====================================================================-->
  <target name="install-svnant"
          depends="install-antcontrib, svnant.download-check"
  	      unless="svn.revision"
          description="Installs SVN ANT tasks for use by this build process">
    <if>
      <istrue value="${svnant.isinstalled}" />
      <then>
        <echo message="Skipping SVN ANT install.  IVY has already been configured by the build" />
      </then>
      <else>
        <echo message="Installing SVN ANT..." />
        <path id="svnant.lib.path">
          <fileset dir="${svnant.build.cache.dir}" includes="**/*.jar" />
        </path>
        <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.lib.path" />
        <property name="svnant.isinstalled" value="true" />
      </else>
    </if>
  </target>


  <!--=======================================================================
        test-svnant
    
        Tests SVN by printing out the repository
        ====================================================================-->
  <target name="test-svnant" depends="install-svnant">
    <svn javahl="${svnant.use-javahl}" svnkit="${svnant.use-svnkit}">
      <wcVersion path="." />
    </svn>
  </target>


  <!--=======================================================================
        svn-revision
    
        Tests SVN by printing out the repository
        ====================================================================-->
  <target name="svn-revision"
          depends="default-svn-revision, compute-svn-revision"
  	      unless="svn.revision"
          description="Prints and sets the SVN revision for the repository at the current dir">
  	<echo message="SVN Revision Number being used: ${svn.revision}"/>
  </target>

	<target name="default-svn-revision" depends="install-antcontrib" unless="svn.revision">
		<if>
			<equals arg1="${default.svn.revision}" arg2=""/>
			<else>
				<echo message="Using default revision number: ${default.svn.revision}"/>
				<property name="svn.revision" value="${default.svn.revision}"/>
			</else>
		</if>
	</target>
	
	<target name="compute-svn-revision" depends="install-svnant" unless="svn.revision">
		<echo message="Computing the SVN Revision number..."/>
    <svn javahl="${svnant.use-javahl}" svnkit="${svnant.use-svnkit}">
      <status path="." revisionProperty="svn.revision" />
    </svn>
    <echo message="Subversion repository revision: ${svn.revision}" />
	</target>
	
	
	<target name="clean" depends="" description="create distribution">
    <delete>
      <fileset dir="." includes="pentaho-bi-platform-*.jar" />
    </delete>
    <delete dir="all-libs" />
  </target>

  <target name="copy-solution">
    <copy todir="${target-solution}">
      <fileset dir="${source-solution}" />
    </copy>
  </target>


  <target name="copy-webapp-stuff">
    <copy todir="${target-pentaho-war}">
      <fileset dir="${platform-webapp}" />
    </copy>
    <copy todir="${target-sw-style-war}">
      <fileset dir="${sw-style-webapp}" />
    </copy>
    <copy todir="${target-pentaho-style-war}">
      <fileset dir="${pentaho-style-webapp}" />
    </copy>
  </target>

  <target name="copy-jars">
    <copy todir="${target-pentaho-war}/WEB-INF/lib">
      <fileset dir="." includes="pentaho-bi-platform-*.jar" />
    </copy>
    <copy todir="${target-pentaho-war}/WEB-INF/lib">
      <fileset dir="all-libs">
        <patternset id="non.test.sources">
          <exclude name="**/servlet-api.jar" />
          <exclude name="**/log4j-1.2.9.jar" />
          <exclude name="**/junit*.jar" />
          <exclude name="**/xalan-2.4.1.jar" />
          <exclude name="**/xercesImpl-2.6.2.jar" />
          <exclude name="**/xml-apis-1.0.b2.jar" />
          <exclude name="**/xml-apis-1.3.02.jar" />
          <exclude name="**/xom-1.0.jar" />
          <exclude name="**/commons-collections-3.1.jar" />
          <exclude name="**/icu4j-2.6.1.jar" />
          <exclude name="**/jaxen-1.1-beta-6.jar" />
          <exclude name="**/commons-digester-1.7.jar" />
        </patternset>
      </fileset>
      <fileset dir="${bi-platform-assembly-open-dir}/lib">
        <include name="**/*.jar" />
        <exclude name="**/portal-security-lib.jar" />
        <exclude name="**/portal-portlet-lib.jar" />
        <exclude name="**/portal-core-lib.jar" />
        <exclude name="**/quartz-oracle-1.5.2.jar" />
        <exclude name="**/pentaho-bi-*.jar" />
        <exclude name="**/servlet-api.jar" />
        <exclude name="**/excludejars.jboss" />
        <exclude name="**/excludejars.generic" />
      </fileset>
    </copy>

    <copy todir="${target-pentaho-war}/WEB-INF/lib">
      <fileset dir="all-libs" excludes="**/servlet-api.jar" />
    </copy>
  </target>

  <target name="dev_update" depends="jar-all, copy-jars, copy-webapp-stuff, copy-solution">
    <echo message="Updated" />
  </target>

  <target name="dev_rebuild" depends="clean-all, resolve, dev_update">
    <echo message="Updated" />
  </target>

  <target name="clean-all" depends="clean">
    <ant antfile="build.xml" dir="../bi-platform-api" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-util" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-repository" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-legacy" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-web" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="clean-all" />
    <ant antfile="build.xml" dir="../bi-platform-appserver" target="clean-all" />
  </target>

  <target name="jar-all" depends="svn-revision">
    <mkdir dir="all-libs" />

    <ant antfile="build.xml" dir="../bi-platform-api" target="dist"/>
    <copy todir=".">
      <fileset dir="../bi-platform-api/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-api/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-util" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-util/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-util/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-engine-core/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-engine-core/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-engine-security/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-engine-security/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-engine-services/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-engine-services/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-repository" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-repository/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-repository/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-ui-foundation/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-ui-foundation/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-plugin-services/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-plugin-services/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-plugin-actions/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-plugin-actions/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-scheduler/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-scheduler/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-legacy" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-legacy/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-legacy/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-web" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-web/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-web/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-web-servlet/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-web-servlet/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="dist" />
    <copy todir=".">
      <fileset dir="../bi-platform-web-portlet/dist" />
    </copy>
    <copy todir="./all-libs">
      <fileset dir="../bi-platform-web-portlet/lib" excludes="pentaho-bi-platform-*.jar" />
    </copy>

    <!-- Remove the servlet-api jar -->
    <delete>
      <fileset dir="./all-libs" includes="servlet-api-*.jar" />
    </delete>
  </target>

  <target name="rebuild" depends="clean-all, jar-all" />

  <target name="publish-local" depends="svn-revision">
    <ant antfile="build.xml" dir="../bi-platform-api" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-util" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-repository" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-legacy" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-web" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="publish-local" />
    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="publish-local" />
  </target>
	
	<target name="publish-pentaho" depends="svn-revision">
		<sequential>
	    <ant antfile="build.xml" dir="../bi-platform-api" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-api" target="resolve" />
			<ant antfile="build.xml" dir="../bi-platform-api" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-util" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-util" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-util" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-engine-core" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-test-foundation" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-engine-security" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-engine-services" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-repository" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-repository" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-repository" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-plugin-services" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-scheduler" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-legacy" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-legacy" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-legacy" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-web" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-web" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-web" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-web-servlet" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="publish-pentaho" />
	    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="clean-all" />
			<ant antfile="build.xml" dir="../bi-platform-web-portlet" target="resolve" />
	    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="publish-pentaho" />
	  </sequential>	 
  </target>	

  <target name="resolve">
    <ant antfile="build.xml" dir="../bi-platform-api" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-util" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-repository" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-legacy" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-web" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="resolve" />
    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="resolve" />
  </target>

  <target name="create-dot-classpaths">
    <ant antfile="build.xml" dir="../bi-platform-api" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-util" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-engine-core" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-test-foundation" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-engine-security" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-engine-services" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-repository" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-ui-foundation" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-services" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-plugin-actions" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-scheduler" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-legacy" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-web" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-web-servlet" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-web-portlet" target="create-dot-classpath" />
    <ant antfile="build.xml" dir="../bi-platform-appserver" target="create-dot-classpath" />
  </target>

</project>