<!--===========================================================================
  This is the build file for the Pentaho Mantle project.
  
  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="Pentaho Mantle" basedir="." default="jar" xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>
	  This build file is used to create the Pentaho Commons Action Sequence DOM 
		project and works with the common_build.xml file.
	</description>

	<!-- Import the version information -->
	<property file="${basedir}/version.properties" />

	<!-- Define the default location of the gwt common build file -->
	<property name="gwt.common.build.file" value="./gwt_common_build.xml" description="This is the location of the standardized common_build.xml file" />

	<!-- Import the common_build.xml file which contains all the default tasks -->
	<import file="${gwt.common.build.file}" />

	<!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    -->

	<!-- Directory in which the source will be copied before a compile -->
	<property name="temp-src.dir" value="${bin.dir}/src" />

	<!--=======================================================================
      gwt-compile
      
      Performs the required gwt compiles
      ====================================================================-->
	<target name="gwt-compile" description="Performs the required GWT Compilation">
		<!-- Compile the Mantle Application -->
		<ant antfile="${gwt.common.build.file}" target="gwt-compile">
			<property name="gwt-module.path" value="org.pentaho.mantle.MantleApplication" />
		</ant>

		<!-- Compile the Mantle Login -->
		<ant antfile="${gwt.common.build.file}" target="gwt-compile">
			<property name="gwt-module.path" value="org.pentaho.mantle.login.MantleLogin" />
		</ant>
	  
	    <!-- since MantleApplication inherits MantleLogin, all of MantleLogin's resources
	    are copied to the MantleApplication web application.  This causes confusion especially
	    when an admin is expected to edit one of these files (like loginsettings.properties).
	    Here we are removing files from the MantleApplication that were copied from MantleLogin
	    -->
	    <delete>
	      <fileset dir="${gwt.output.dir}/mantle">
	        <include name="**/loginsettings.properties"/>
	        <include name="**/mantleLogin.jsp"/>
	      </fileset>
	    </delete>
	  
	  
	</target>
</project>
