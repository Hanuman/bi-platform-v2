<?xml version="1.0" encoding="UTF-8"?>

<!--  This plugin specification file illustrates various extension points a plugin can extend, by providing:
        1. An Echo web service
        2. Content type registration of, and related content generation for, a new "xecho" solution file type 
        3. Am Echo BI Component (POJO style)
        
      A plugin file could contain just one of these sections and be complete.  For purposes of illustration only, we 
      are showing all in a single plugin, how you might configure each type of extension.  In other words, your plugin
      may only need to provide a Web Service, in which case you would only need the xml in section 1.  Conversely, your
      plugin may only need to specify a new content type and content generator, so your plugin.xml would only need to 
      contain the stuff in section 2, etc. 
-->

<plugin title="Echo Service Sample">
  
  <!-- 
  1. Echo Web Service 
  Here we are exposing the EchoService java bean as a webservice 
  -->
  <bean id="echoService" class="org.pentaho.samples.EchoService"/>
  <webservice 
    title="Echo Service" 
    description="A sample webservice that echos an input"
    ref="echoService"/>
  
  <!-- 
  2. Echo Content Type and Content Generation
     Here we are configuring the system to recognize our new .xecho file type and make it runnable in PUC.
     We are telling the platform to run our content generator, EchoContentGenerator, when an xecho file is "invoked" in PUC.  
  -->
    <content-type type="xecho" mime-type="text/html">
    <title>Echo Config</title>
    <description>Echo Config File</description>
    <icon-url>content/echo-res/echo.jpg</icon-url>
    <meta-provider>org.pentaho.samples.EchoContentTypeMetaProvider</meta-provider>
    <operations>
      <operation>
        <id>RUN</id>
        <command>content/echo?message=from_platform&amp;solution={solution}&amp;path={path}&amp;action={name}</command>
      </operation>
    </operations>
  </content-type>
  
  <content-generator
    id="echo"
    title="Echo"
    type="xecho"
    class="org.pentaho.samples.EchoContentGenerator"/>
    
    <!-- here, we are making the platform aware of a static resource that our plugin provides.  The echo-res path
         is referenced above in the content-type definition.  Specifically, the icon is being served statically via
         this path -->
    <static-paths>
      <static-path url="/echo-res" localFolder="resources"/>
    </static-paths>  
    
    <!-- 
    3.  Echo POJO-style BI Component
    -->
    <bean id="echoComponent" class="org.pentaho.samples.EchoComponent"/>


  
</plugin>